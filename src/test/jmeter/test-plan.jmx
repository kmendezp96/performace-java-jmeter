<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.2.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="baseUrl" elementType="Argument">
            <stringProp name="Argument.name">baseUrl</stringProp>
            <stringProp name="Argument.value">backmusters.endavabogota.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="userEmail" elementType="Argument">
            <stringProp name="Argument.name">userEmail</stringProp>
            <stringProp name="Argument.value">kevin.mendez@endava.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">300</stringProp>
        <stringProp name="ThreadGroup.ramp_time">900</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">300</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Update Skills Flow" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Update Skills" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;name&quot;: &quot;LINQ&quot;,&#xd;
        &quot;level&quot;: &quot;02&quot;,&#xd;
        &quot;approved&quot;: false,&#xd;
        &quot;definition&quot;: &quot;LINQ&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;ASMX&quot;,&#xd;
        &quot;level&quot;: &quot;03&quot;,&#xd;
        &quot;approved&quot;: false,&#xd;
        &quot;definition&quot;: &quot;ASMX&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;WebForms (aspx)&quot;,&#xd;
        &quot;level&quot;: &quot;03&quot;,&#xd;
        &quot;approved&quot;: false,&#xd;
        &quot;definition&quot;: &quot;WebForms (aspx)&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;WCF&quot;,&#xd;
        &quot;level&quot;: &quot;03&quot;,&#xd;
        &quot;approved&quot;: false,&#xd;
        &quot;definition&quot;: &quot;WCF&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;Unit Testing&quot;,&#xd;
        &quot;level&quot;: &quot;02&quot;,&#xd;
        &quot;approved&quot;: false,&#xd;
        &quot;definition&quot;: &quot;Unit Testing&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;MVC (razor)&quot;,&#xd;
        &quot;level&quot;: &quot;01&quot;,&#xd;
        &quot;approved&quot;: false,&#xd;
        &quot;definition&quot;: &quot;MVC (razor)&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;ADO&quot;,&#xd;
        &quot;level&quot;: &quot;02&quot;,&#xd;
        &quot;approved&quot;: false,&#xd;
        &quot;definition&quot;: &quot;ADO&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;Visual Basic&quot;,&#xd;
        &quot;level&quot;: &quot;01&quot;,&#xd;
        &quot;approved&quot;: false,&#xd;
        &quot;definition&quot;: &quot;Visual Basic&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;ASP .NET&quot;,&#xd;
        &quot;level&quot;: &quot;02&quot;,&#xd;
        &quot;approved&quot;: false,&#xd;
        &quot;definition&quot;: &quot;ASP .NET&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;WebAPI&quot;,&#xd;
        &quot;level&quot;: &quot;03&quot;,&#xd;
        &quot;approved&quot;: false,&#xd;
        &quot;definition&quot;: &quot;WebAPI&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;Visual Studio Code&quot;,&#xd;
        &quot;level&quot;: &quot;02&quot;,&#xd;
        &quot;approved&quot;: false,&#xd;
        &quot;definition&quot;: &quot;Visual Studio Code&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;Entity Framework&quot;,&#xd;
        &quot;level&quot;: &quot;03&quot;,&#xd;
        &quot;approved&quot;: false,&#xd;
        &quot;definition&quot;: &quot;Entity Framework&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;C#&quot;,&#xd;
        &quot;level&quot;: &quot;04&quot;,&#xd;
        &quot;approved&quot;: false,&#xd;
        &quot;definition&quot;: &quot;C#&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;Azure Devops (TFS)&quot;,&#xd;
        &quot;level&quot;: &quot;01&quot;,&#xd;
        &quot;approved&quot;: false,&#xd;
        &quot;definition&quot;: &quot;Azure Devops (TFS)&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;Azure Dev tools&quot;,&#xd;
        &quot;level&quot;: &quot;00&quot;,&#xd;
        &quot;approved&quot;: false,&#xd;
        &quot;definition&quot;: &quot;Azure Dev tools&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;Visual Studio&quot;,&#xd;
        &quot;level&quot;: &quot;00&quot;,&#xd;
        &quot;approved&quot;: false,&#xd;
        &quot;definition&quot;: &quot;Visual Studio&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;ASP .NET Core&quot;,&#xd;
        &quot;level&quot;: &quot;01&quot;,&#xd;
        &quot;approved&quot;: false,&#xd;
        &quot;definition&quot;: &quot;ASP .NET Core&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;WPF&quot;,&#xd;
        &quot;level&quot;: &quot;02&quot;,&#xd;
        &quot;approved&quot;: false,&#xd;
        &quot;definition&quot;: &quot;WPF&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;WinForms&quot;,&#xd;
        &quot;level&quot;: &quot;02&quot;,&#xd;
        &quot;approved&quot;: false,&#xd;
        &quot;definition&quot;: &quot;WinForms&quot;&#xd;
    }&#xd;
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${baseUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">endavans/${userEmail}/skills</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="Skill Approval Flow" enabled="true"/>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Approve Skills" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[&#xd;
    {&#xd;
        &quot;name&quot;: &quot;LINQ&quot;,&#xd;
        &quot;level&quot;: &quot;02&quot;,&#xd;
        &quot;approved&quot;: true,&#xd;
        &quot;definition&quot;: &quot;LINQ&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;ASMX&quot;,&#xd;
        &quot;level&quot;: &quot;03&quot;,&#xd;
        &quot;approved&quot;: true,&#xd;
        &quot;definition&quot;: &quot;ASMX&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;WebForms (aspx)&quot;,&#xd;
        &quot;level&quot;: &quot;03&quot;,&#xd;
        &quot;approved&quot;: true,&#xd;
        &quot;definition&quot;: &quot;WebForms (aspx)&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;WCF&quot;,&#xd;
        &quot;level&quot;: &quot;03&quot;,&#xd;
        &quot;approved&quot;: true,&#xd;
        &quot;definition&quot;: &quot;WCF&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;Unit Testing&quot;,&#xd;
        &quot;level&quot;: &quot;02&quot;,&#xd;
        &quot;approved&quot;: true,&#xd;
        &quot;definition&quot;: &quot;Unit Testing&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;MVC (razor)&quot;,&#xd;
        &quot;level&quot;: &quot;01&quot;,&#xd;
        &quot;approved&quot;: true,&#xd;
        &quot;definition&quot;: &quot;MVC (razor)&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;ADO&quot;,&#xd;
        &quot;level&quot;: &quot;02&quot;,&#xd;
        &quot;approved&quot;: true,&#xd;
        &quot;definition&quot;: &quot;ADO&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;Visual Basic&quot;,&#xd;
        &quot;level&quot;: &quot;01&quot;,&#xd;
        &quot;approved&quot;: true,&#xd;
        &quot;definition&quot;: &quot;Visual Basic&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;ASP .NET&quot;,&#xd;
        &quot;level&quot;: &quot;02&quot;,&#xd;
        &quot;approved&quot;: true,&#xd;
        &quot;definition&quot;: &quot;ASP .NET&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;WebAPI&quot;,&#xd;
        &quot;level&quot;: &quot;03&quot;,&#xd;
        &quot;approved&quot;: true,&#xd;
        &quot;definition&quot;: &quot;WebAPI&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;Visual Studio Code&quot;,&#xd;
        &quot;level&quot;: &quot;02&quot;,&#xd;
        &quot;approved&quot;: true,&#xd;
        &quot;definition&quot;: &quot;Visual Studio Code&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;Entity Framework&quot;,&#xd;
        &quot;level&quot;: &quot;03&quot;,&#xd;
        &quot;approved&quot;: true,&#xd;
        &quot;definition&quot;: &quot;Entity Framework&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;C#&quot;,&#xd;
        &quot;level&quot;: &quot;04&quot;,&#xd;
        &quot;approved&quot;: true,&#xd;
        &quot;definition&quot;: &quot;C#&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;Azure Devops (TFS)&quot;,&#xd;
        &quot;level&quot;: &quot;01&quot;,&#xd;
        &quot;approved&quot;: true,&#xd;
        &quot;definition&quot;: &quot;Azure Devops (TFS)&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;Azure Dev tools&quot;,&#xd;
        &quot;level&quot;: &quot;00&quot;,&#xd;
        &quot;approved&quot;: true,&#xd;
        &quot;definition&quot;: &quot;Azure Dev tools&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;Visual Studio&quot;,&#xd;
        &quot;level&quot;: &quot;00&quot;,&#xd;
        &quot;approved&quot;: true,&#xd;
        &quot;definition&quot;: &quot;Visual Studio&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;ASP .NET Core&quot;,&#xd;
        &quot;level&quot;: &quot;01&quot;,&#xd;
        &quot;approved&quot;: true,&#xd;
        &quot;definition&quot;: &quot;ASP .NET Core&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;WPF&quot;,&#xd;
        &quot;level&quot;: &quot;02&quot;,&#xd;
        &quot;approved&quot;: true,&#xd;
        &quot;definition&quot;: &quot;WPF&quot;&#xd;
    },&#xd;
    {&#xd;
        &quot;name&quot;: &quot;WinForms&quot;,&#xd;
        &quot;level&quot;: &quot;02&quot;,&#xd;
        &quot;approved&quot;: true,&#xd;
        &quot;definition&quot;: &quot;WinForms&quot;&#xd;
    }&#xd;
]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${baseUrl}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">endavans/${userEmail}/skills/approval</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
